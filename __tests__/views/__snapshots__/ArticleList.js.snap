// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Error renders correctly when data is fetching 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={
      Array [
        Object {
          "id": "id1",
          "preview": Object {},
          "title": "title1",
          "url": "url1",
        },
        Object {
          "id": "id2",
          "preview": Object {},
          "title": "title2",
          "url": "url2",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[MockFunction]}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[MockFunction]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[MockFunction]}
        progressViewOffset={undefined}
        refreshing={true}
      />
    }
    refreshing={true}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
        <View
          style={
            Object {
              "height": 10,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "height": 24,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="#999999"
      hidesWhenStopped={true}
      size="small"
    />
  </View>
</View>
`;

exports[`Error renders correctly with data 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={
      Array [
        Object {
          "id": "id1",
          "preview": Object {},
          "title": "title1",
          "url": "url1",
        },
        Object {
          "id": "id2",
          "preview": Object {},
          "title": "title2",
          "url": "url2",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReached={[MockFunction]}
    onEndReachedThreshold={0.5}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onRefresh={[MockFunction]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[MockFunction]}
        progressViewOffset={undefined}
        refreshing={false}
      />
    }
    refreshing={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
        <View
          style={
            Object {
              "height": 10,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "height": 24,
      }
    }
  />
</View>
`;
